buildscript {
  ext.kotlin_version = "1.3.61"
  ext.tornadofx_version = "1.7.19"
  ext.junit_version = "5.5.2"

  repositories {
    mavenLocal()
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "org.junit.platform:junit-platform-gradle-plugin:1.2.0"
  }
}

apply plugin: "kotlin"
apply plugin: "application"
apply plugin: "org.junit.platform.gradle.plugin"

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url "https://oss.sonatype.org/content/repositories/snapshots/"
  }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

  implementation "no.tornado:tornadofx:$tornadofx_version"

  implementation files("/usr/lib/jvm/openjfx/rt/lib/ext/jfxrt.jar")

  testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
  testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_version"
}

mainClassName = "com.example.demo.app.MyApp"

jar {
  manifest {
    attributes(
        "Class-Path": configurations.compile.collect { it.getName() }.join(" "),
        "Main-Class": mainClassName
    )
  }
  from(configurations.compile.collect { entry -> zipTree(entry) }) {
    exclude "META-INF/MANIFEST.MF"
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
  }
}
